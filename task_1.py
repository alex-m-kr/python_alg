"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.

Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.

Подсказка:
Вариант исполнения:
- условие рекурсивного вызова - введена операция +, -, *, / - ШАГ РЕКУРСИИ
- условие завершения рекурсии - введена операция 0 - БАЗОВЫЙ СЛУЧАЙ

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите операцию (+, -, *, / или 0 для выхода): +
Введите первое число: 214
Введите второе число: 234
Ваш результат 448
Введите операцию (+, -, *, / или 0 для выхода): -
Введите первое число: вп
Вы вместо трехзначного числа ввели строку (((. Исправьтесь
Введите операцию (+, -, *, / или 0 для выхода):
"""

# Данное решение реализовано для целых положительных чисел


def func_sum():
    result = 0
    operation = input('Введите операцию (+, -, *, / или 0 для выхода): ')
    if not check_operation(operation):
        print('Давайте заново')
        func_sum()
        return   # после получения ошибок понял, что здесь тоже нужен return,
                 # так как при 0 (выходе) выбрасывает в место вызова

    # базовый случай
    if operation == '0':
        print('Выход')
        return

    n1 = input('Введите первое число: ')
    if not check_num(n1):
        print('Давайте заново')
        func_sum()
        return
    n2 = input('Введите второе число: ')
    if not check_num(n2):
        print('Давайте заново')
        func_sum()
        return

    if operation == '+':
        result = int(n1) + int(n2)
    elif operation == '-':
        result = int(n1) - int(n2)
    elif operation == '*':
        result = int(n1) * int(n2)
    elif operation == '/' and n2 == '0':
        print('На ноль делить нельзя, давайте заново')
        func_sum()
        return
    elif operation == '/':
        result = int(n1) / int(n2)
    print(f'Ваш результат: {result}')

    # шаг рекурсии
    func_sum()


def check_num(str_obj):
    flag = True
    for el in str_obj:
        if not '0' <= el <= '9':
            print('Введено не целое положительное число')
            flag = False
            break
    # print(flag)
    return flag


def check_operation(str_obj):
    flag = True
    if len(str_obj) > 1 or str_obj not in ['+', '-', '*', '/', '0']:
        print('Вы ошиблись при вводе оператора')
        flag = False
    # print(flag)
    return flag


func_sum()
