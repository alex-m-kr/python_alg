"""
Задание 3.

Для этой задачи:
1) придумайте 2-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.

Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""

dict_company = {
    'one': 3000,
    'two': 5000,
    'three': 2000,
    'four': 6000,
    'five': 1000
}

# вариант №1, используется сортировка, сложность O(N * logN)
lst_company = [(v, k) for k, v in dict_company.items()]
print(lst_company)
lst_company.sort(reverse=True)
for i in range(3):
    print(f'Название компании - {lst_company[i][1]}, прибыль - {lst_company[i][0]}')


# вариант №2, сложность линейная O(N), это решение лучше, т.к. у него меньше сложность
lst_comp = [(v, k) for k, v in dict_company.items()]
print()
print(lst_comp)
for i in range(3):
    max_el = max(lst_comp)
    print(max_el[1], max_el[0])
    lst_comp.remove(max_el)
